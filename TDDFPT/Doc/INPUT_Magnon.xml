<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="input_xx.xsl"?>
<!-- FILE AUTOMATICALLY CREATED: DO NOT EDIT, CHANGES WILL BE LOST -->
    
<input_description distribution="Quantum ESPRESSO" package="turboMAGNON" program="turbo_magnon.x" >
   <toc>
   </toc>
   <intro>
    Input data format: { } = optional, [ ] = it depends.

All quantities whose dimensions are not explicitly specified are in
RYDBERG ATOMIC UNITS

BEWARE: TABS, DOS &lt;CR&gt;&lt;LF&gt; CHARACTERS ARE POTENTIAL SOURCES OF TROUBLE

Comment lines in namelists can be introduced by a &quot;!&quot;, exactly as in
fortran code. Comments lines in ``cards&apos;&apos; can be introduced by
either a &quot;!&quot; or a &quot;#&quot; character in the first position of a line.

Structure of the input data:
===============================================================================

&amp;LR_INPUT
  ...
/

&amp;LR_CONTROL
  ...
/
   </intro>
   <namelist name="LR_INPUT" >
      <label> This namelist is always needed !
      </label>
      <var name="prefix" type="CHARACTER" >
         <default> &apos;pwscf&apos;
         </default>
         <info>
Sets the prefix for generated and read files. The files
generated by the ground state pw.x run must have this
same prefix.
         </info>
      </var>
      <var name="outdir" type="CHARACTER" >
         <default> &apos;./&apos;
         </default>
         <info>
The directory that contains the run critical files, which
include the files generated by ground state pw.x run.
         </info>
      </var>
      <var name="restart" type="LOGICAL" >
         <default> .false.
         </default>
         <info>
When set to .true., turbo_magnons.x will attempt to restart
from a previous interrupted calculation. (see restart_step
variable).
Beware, if set to .false. turbo_magnons.x will OVERWRITE any
previous runs.
         </info>
      </var>
      <var name="restart_step" type="INTEGER" >
         <default> itermax
         </default>
         <info>
The code writes restart files every restart_step iterations.
Restart files are automatically written at the end of
itermax Lanczos steps.
         </info>
      </var>
      <var name="lr_verbosity" type="INTEGER" >
         <default> 1
         </default>
         <info>
This integer variable controls the amount of information
written to standard output.
         </info>
      </var>
      <var name="disk_io" type="CHARACTER" >
         <default> &apos;default&apos;
         </default>
         <info>
    Fine control of disk usage. Currently only &apos;reduced&apos; is
supported where no restart files are written, apart from
the &apos;default&apos; mode.
         </info>
      </var>
   </namelist>
   <namelist name="LR_CONTROL" >
      <var name="itermax" type="INTEGER" >
         <default> 500
         </default>
         <info>
Number of Lanczos iterations to be performed.
         </info>
      </var>
      <var name="pseudo_hermitian" type="LOGICAL" >
         <default> .true.
         </default>
         <info>
When set to .true. the pseudo-Hermitian Lanczos
algorithm is used. When set to .false. the
non-Hermitian Lanczos biorthogonalization algorithm
is used (which is two times slower).
         </info>
      </var>
      <var name="approximation" type="CHARACTER" >
         <default> &apos;TDDFT&apos;
         </default>
         <info>
A string describing a level of theory:
&apos;TDDFT&apos;            - Time-Dependent Local Density Approximation or
                     Time-Dependent Generalized Gradient Approximation
                     (depending on the XC functional),
&apos;IPA&apos;              - Independent Particle Approximation,
         </info>
      </var>
      <var name="ipol" type="INTEGER" >
         <default> 1
         </default>
         <info>
An integer variable that determines which element of the
dynamical magnetic susceptibility will be computed:
1 -&gt; chi_xx(omega), 2 -&gt; chi_yy(omega), and
3 -&gt; chi_zz(omega). When set to 4, three Lanczos chains
are sequentially performed and the full susceptibility
tensor is computed.
         </info>
      </var>
      <vargroup type="REAL" >
         <var name="q1" >
         </var>
         <var name="q2" >
         </var>
         <var name="q3" >
         </var>
         <default> 1.0, 1.0, 1.0
         </default>
         <info>
The values of the transferred momentum q = (q1, q2, q3)
in Cartesian coordinates in units of 2pi/a, where
&quot;a&quot; is the lattice parameter.
         </info>
      </vargroup>
   </namelist>
</input_description>
